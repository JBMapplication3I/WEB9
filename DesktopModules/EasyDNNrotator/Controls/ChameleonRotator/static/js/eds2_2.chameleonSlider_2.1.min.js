!function (H, I, S) { "use strict"; function A(e, i) { return -1 !== e.indexOf(i, e.length - i.length) } var N = "chameleonSlider_2_1"; H.fn[N] = function (e) { var L = H.extend(!0, {}, { content_source: "", container_dimensions: { width: 750, height: 400, w_as_ratio: !1, h_as_ratio: !1, height_references_width: !1 }, autoplay: { enable: !0, interval: 4e3, pause_on_hover: !0, autostart_video_playback: !1, indicator: { display: !0, position: { vertical: "top", horizontal: "left", h_offset: 0, v_offset: 0, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 }, dimensions: { height: 2, width: 750, h_as_ratio: !1, w_as_ratio: !1 }, orientation: "horizontal", flip_direction: !1 } }, arrows: { display: !0, auto_hide: !0, hide_speed: 250, prev: { position: { vertical: "top", horizontal: "left", h_offset: 0, v_offset: 183, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } }, next: { position: { vertical: "top", horizontal: "right", h_offset: 0, v_offset: 183, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } }, autoplay_toggle: { display: !0, auto_hide: !0, hide_speed: 250, position: { vertical: "top", horizontal: "left", h_offset: 347, v_offset: 130, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } }, scrollable_boxes: { item_info: { display: !0, container: { dimensions: { height: 100, width: 750, h_as_ratio: !1, w_as_ratio: !1 }, resize_to_content: !0, show_on_hover: !1, position: { vertical: "top", horizontal: "left", h_offset: 0, v_offset: 2, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } }, gallery_info: { display: !1, container: { dimensions: { height: 100, width: 750, h_as_ratio: !1, w_as_ratio: !1 }, resize_to_content: !0, show_on_hover: !1, position: { vertical: "top", horizontal: "left", h_offset: 0, v_offset: 2, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } } }, thumbs: { display: !0, auto_hide: !1, hide_speed: 250, width: 100, height: 46, captions: !0, display_item_types: !1, pagination: { direction: "horizontal", duration: 250, easing: "swing" }, tooltips: { enabled: !1, title: !0, description: !1, position: { my: "bottom center", at: "top center" }, classes: "" }, container: { transparent: !0, dimensions: { height: 20, width: 679, h_as_ratio: !1, w_as_ratio: !1 }, position: { vertical: "bottom", horizontal: "left", h_offset: 35, v_offset: 0, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } }, categories: { display: !1, auto_hide: !1, hide_speed: 250, width: 100, height: 46, pagination: { direction: "horizontal", duration: 250, easing: "swing" }, container: { dimensions: { height: 20, width: 679, h_as_ratio: !1, w_as_ratio: !1 }, position: { vertical: "bottom", horizontal: "left", h_offset: 35, v_offset: 0, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } }, pagination: { display: !0, pages_at_once: 7, direction: "horizontal", position: { vertical: "bottom", horizontal: "right", h_offset: 35, v_offset: 58, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } }, title_boxes: { current_item: { display: !1, height: 35, position: { vertical: "bottom", horizontal: "left", h_offset: 0, v_offset: 200, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } }, current_gallery: { display: !1, height: 35, position: { vertical: "top", horizontal: "left", h_offset: 0, v_offset: 0, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } }, buttons: { email: { display: !1, position: { vertical: "top", horizontal: "right", h_offset: 35, v_offset: 58, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 }, email_subject: "Look at this link" }, download: { display: !1, position: { vertical: "top", horizontal: "left", h_offset: 35, v_offset: 58, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } }, fullscreen: { display: !1, position: { vertical: "top", horizontal: "left", h_offset: 35, v_offset: 58, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } }, exit_fullscreen: { display: !1, position: { vertical: "bottom", horizontal: "right", h_offset: 35, v_offset: 58, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 } } }, social_buttons: { display: !1, direction: "horizontal", load_after_effect: !0, position: { vertical: "bottom", horizontal: "right", h_offset: 35, v_offset: 58, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 }, buttons: { facebook: { display: !0, html: '<iframe src="//www.facebook.com/plugins/like.php?href={location_href_encoded}&amp;layout=button_count&amp;show_faces=true&amp;action=like&amp;font&amp;colorscheme=light&amp;height=20" scrolling="no" frameborder="0" style="border:none; overflow:hidden; height:20px; width: 100px;" allowTransparency="true"></iframe>' }, google: { display: !0, html: '<g:plusone size="medium" href="{location_href}" annotation="bubble"></g:plusone><script type="text/javascript">gapi.plusone.go();<\/script>' }, twitter: { display: !0, html: '<a href="//twitter.com/share" class="twitter-share-button" data-url="{location_href}" data-count="horizontal">Tweet</a><script type="text/javascript" src="//platform.twitter.com/widgets.js"><\/script>' } }, hideable: !1, container: { width: 100, height: 100 } }, main_panel: { display: !0, fill_panel: !1, stretch_small_image: !1, top_left_align: !1, drag_navigation: !1, immediately_preload_all_images: !1, dimensions: { width: 750, height: 400, h_as_ratio: !1, w_as_ratio: !1 }, position: { vertical: "top", horizontal: "left", h_offset: 0, v_offset: 0, h_as_ratio: !1, v_as_ratio: !1, v_center_point: !1, h_center_point: !1 }, trim: { top: 0, bottom: 0, left: 0, right: 0 }, transition: { duration: 800, effects: [] } }, lightbox_title: !1, lightbox_description: !1, key_browse: !0, redirect_on_click: !1, redirect_on_click_target: "_self", lightbox_on_click: !1, module_id: 0, portal_id: 0, article_id: 0, filter_values: "", filter_types: "", locale: "", inhouse_player: "flowplayer", flowplayer_src: "", fullscreen_provider: "pp", pretty_photo_options: {}, smb_options: {}, smbLight_options: {}, cycle_current_category: !0, open_at: null, modify_browser_history: !1, videoVolume: 1 }, e), P = I.history.location || I.location; return this.each(function () { function c(e) { var i = e.src; if (e.sizes) for (var t = 0, n = e.sizes.length; t < n; t++) { var a = e.sizes[t]; if (a.width < E.main_panel.dimensions.width) break; i = a.src } return i } function _(e) { return "number" == typeof e && (e = T.category.items[e]), "image" == e.type || ("video" == e.type || "audio" == e.type) && L.lightbox_on_click } var e, i, p, h, g, x, m, u, t, a, o, s, n, r, l, d, f, y, k = H(this), b = { trys: 0 }, v = H('<div class="loading_slider_overlay" />'), w = H('<div class="indicator" />'), j = H("<p />"), T = { category: {}, item: {} }, z = 0, q = {}, M = H(), C = { interval: "", last_started: 0, pause_time: 0, start_pause_delta: 0, time_remaining: 0, pause: !1, user_paused: !1, fade_in: !1, reset: !1, transition_in_progres: !1, video_playing: !1 }, E = { container_dimensions: {}, thumbs: { page: { vertical_space: 0, horizontal_space: 0, width: 0, height: 0, count: 0 }, container: {}, width: 0, height: 0, per_page: 0, per_row: 0, row_count: 0, window_width: 0, window_height: 0 }, categories: { page: { vertical_space: 0, horizontal_space: 0, width: 0, height: 0, count: 0 }, container: {}, width: 0, height: 0, per_page: 0, per_row: 0, row_count: 0, window_width: 0, window_height: 0, render_categories: !0 }, autoplay: { indicator: {} }, title_boxes: { current_item: {}, current_gallery: {} }, scrollable_boxes: { item_info: {}, gallery_info: {} }, pagination: { pages_at_once: 0, page: { width: 0, height: 0 } }, main_panel: { dimensions: {}, initialized: !1, disable_clicking: !1, disable_clicking_interval: "" }, preloaded_images: {}, preloading_item: !1, buttons: { email: {}, download: {}, fullscreen: {}, exit_fullscreen: {} }, html5: { video: !1 }, youtube_iframe_api: { called: !1, loaded: !1 }, youtube_player_object: void 0, mouse_entered: !1, item_details_shown: !1 }, O = { init: function () { L.container_dimensions.w_as_ratio || L.container_dimensions.h_as_ratio ? (e = k.parent(), E.container_dimensions = { width: L.container_dimensions.w_as_ratio ? Math.round(e.width() * L.container_dimensions.width) : L.container_dimensions.width, height: 0 }, E.container_dimensions.height = L.container_dimensions.h_as_ratio ? Math.round((L.container_dimensions.height_references_width ? E.container_dimensions.width : e.height()) * L.container_dimensions.height) : L.container_dimensions.height, H(I).bind("resize.chameleonSlider", function () { clearTimeout(i), i = setTimeout(function () { E.container_dimensions = { width: L.container_dimensions.w_as_ratio ? Math.round(e.width() * L.container_dimensions.width) : L.container_dimensions.width, height: 0 }, E.container_dimensions.height = L.container_dimensions.h_as_ratio ? Math.round((L.container_dimensions.height_references_width ? E.container_dimensions.width : e.height()) * L.container_dimensions.height) : L.container_dimensions.height, k.trigger("resize_slider") }, 200) })) : E.container_dimensions = { width: L.container_dimensions.width, height: L.container_dimensions.height }, k.width(E.container_dimensions.width).height(E.container_dimensions.height).append(v).bind("destroy", function () { clearTimeout(C.interval) }), v.width(E.container_dimensions.width).height(E.container_dimensions.height).append(w).show(0); try { E.html5.video = !!S.createElement("video").canPlayType } catch (e) { } L.modify_browser_history && H(I).on("popstate", function (e) { O.parse_slider_url_hash(P.hash), O.show_item(T.item.index, !0, void 0, !0) }), O.get_content_source() }, get_content_source: function () { 3 < b.trys ? j.is(":visible") ? j.html("Unable to display the items (requesting the items failed)") : w.fadeOut(250, function () { (j = H("<p>Unable to display the items (requesting the items failed)</p>")).appendTo(v).css({ display: "block", top: Math.floor((E.container_dimensions.height - j.outerHeight(!0)) / 2) }) }) : (b.trys += 1, H.ajax({ dataType: "json", type: "get", url: L.content_source, timeout: 3e5, data: "mid=" + L.module_id + "&portal_id=" + L.portal_id + "&locale=" + L.locale + "&article_id=" + L.article_id + "&html5_player=" + (E.html5.video ? "1" : "0") + ("" === L.filter_values ? "" : "&filter_values=" + L.filter_values + "&filter_types=" + L.filter_types), success: O.load, complete: O.ajax_callback, cache: !1 })) }, ajax_callback: function (e, i) { "success" !== i && O.get_content_source() }, parse_slider_url_hash: function (e) { var i, t = e.substring(1), n = t.indexOf("/"), a = void 0; -1 !== (n = (i = t.substring(n + 1)).indexOf("/")) && (-1 !== (n = (a = i.substring(n + 1)).indexOf("/")) && (a = a.substring(0, n)), a = a || void 0, i = i.substring(0, i.indexOf("/"))), (h = { ids: i.split("-"), indexes: [] }).indexes = O.category_indexes_from_ids(H.extend([], h.ids), p), 0 == h.indexes.length && (h.indexes = [0], h.ids = [p[0].id]), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: 0, index: O.item_index_from_id(a) }, T.item.id = T.category.items[T.item.index].id }, load: function (e) { var t, i = P.hash.substring(1), n = i.indexOf("/"), a = -1 == n ? "" : i.substring(0, n); 0 != e.content.length ? (p = e.content, null != L.open_at ? ((h = { ids: L.open_at.categories, indexes: [] }).indexes = O.category_indexes_from_ids(H.extend([], h.ids), p), 0 == h.indexes.length && (h.indexes = [0], h.ids = [p[0].id]), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: 0, index: O.item_index_from_id(L.open_at.item) }, T.item.id = T.category.items[T.item.index].id) : a == "slider_" + L.module_id || a == "gallery_" + L.module_id ? (O.parse_slider_url_hash("#" + i), "smb" == L.fullscreen_provider && a == "gallery_" + L.module_id && 0 < T.category.item_count && (t = [], L.smb_options.openAt = 0, H.each(T.category.items, function (e, i) { i.id === T.item.id && (L.smb_options.openAt = e), t.push(i.smb_object) }), H("<div />").data("socialMediaBox", t).socialMediaBox(L.smb_options))) : (h = { ids: [p[0].id], indexes: [0] }, T.category = p[0], T.category.item_count = T.category.items.length, T.item = { id: void 0, index: O.item_index_from_id(void 0) }), "YT" in I && "Player" in I.YT && (E.youtube_iframe_api.called = !0, E.youtube_iframe_api.loaded = !0), L.buttons.exit_fullscreen.display && O.exit_fullscreen.init(), L.autoplay.enable && O.autoplay.init(), L.pagination.display && O.pagination.init(), L.social_buttons.display && O.social_buttons.init(), L.buttons.email.display && O.email_button.init(), L.buttons.download.display && O.download_button.init(), L.buttons.fullscreen.display && O.fullscreen_button.init(), L.autoplay_toggle.display && O.autoplay_toggle.init(), L.arrows.display && O.arrows.init(), L.categories.display && O.categories.init(), L.thumbs.display && O.thumbnails.init(), L.title_boxes.current_item.display && O.item_title.init(), L.title_boxes.current_gallery.display && O.gallery_title.init(), L.scrollable_boxes.item_info.display && O.item_info.init(), L.scrollable_boxes.gallery_info.display && O.gallery_info.init(), L.main_panel.display ? O.main_panel.init() : O.triggers()) : w.fadeOut(250, function () { (j = H("<p>" + (e.user_friendly_msg ? e.user_friendly_msg : "There are no items to display.") + "</p>")).appendTo(v).css({ display: "block", top: Math.floor((E.container_dimensions.height - j.outerHeight(!0)) / 2) }) }) }, show_item: function (e, i, t, n) { if (i = void 0 !== i, (e = parseInt(e, 10)) !== T.item.index || i) { "function" == typeof O._on_pre_item_change && (O._on_pre_item_change(), O._on_pre_item_change = void 0), C.video_playing = !1, e < 0 ? e = T.category.item_count - 1 : e >= T.category.item_count && (e = 0), O.autoplay.reset(), z = T.item.index; var a = T.category.items[e]; if (T.item.index = e, T.item.id = a.id, O.pagination.select(e), O.thumbnails.select(e), E.item_details_shown = !1, (L.main_panel.immediately_preload_all_images || _(a) && E.preloaded_images[a.src] && E.preloaded_images[a.src].loaded) && (E.item_details_shown = !0, O.social_buttons.display(e), O.item_title.select(e), O.item_info.display(e), O.download_button.display(e), O.email_button.display(e)), L.modify_browser_history && !n) { var o, s = P.href.indexOf("#"); o = -1 == s ? P.href : P.href.substring(0, s), o += "#slider_" + L.module_id + "/" + h.ids.join("-") + "/" + T.item.id, history.pushState(null, null, o) } L.main_panel.display ? E.preloading_item || (void 0 === t ? O.main_panel.display(e) : O.main_panel.display(e, t)) : k.trigger("slider_transition_finnished") } }, next: function () { var e, i = p.length; if (!L.cycle_current_category && T.item.index == T.category.item_count - 1) return e = h.indexes.pop() + 1, 0 != h.indexes.length && (i = O.get_category(h.indexes).children.length), e < i ? h.indexes.push(e) : h.indexes.push(0), h.ids = O.category_ids_from_indexes(h.indexes), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: T.category.items[0].id, index: 0 }, E.categories.render_categories = !1, void O.change_category(); O.show_item(T.item.index + 1) }, prev: function () { var e, i = p.length; if (!L.cycle_current_category && 0 == T.item.index) return e = h.indexes.pop() - 1, 0 != h.indexes.length && (i = O.get_category(h.indexes).children.length), e < 0 ? h.indexes.push(i - 1) : h.indexes.push(e), h.ids = O.category_ids_from_indexes(h.indexes), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: T.category.items[T.category.items.length - 1].id, index: T.category.items.length - 1 }, E.categories.render_categories = !1, void O.change_category(); O.show_item(T.item.index - 1) }, pagination: { init: function () { var e; t = H('<div class="pagination" />'), a = H('<ul class="pages_container" />'), t.append(a), t.css("visibility", "hidden"), k.prepend(t), O.position_element(t, L.pagination.position), e = H("<li><span></span></li>"), a.append(e), E.pagination.page.width = e.outerWidth(!0), E.pagination.page.height = e.outerHeight(!0), t.css("visibility", ""), O.pagination.display_category(), O.pagination.select(T.item.index), a.delegate("li", "click", function () { return O.show_item(H(this).index()), !1 }) }, display_category: function () { if (L.pagination.display) { var e = 0, i = ""; for (t.css("display", "none"), a.html(""), E.pagination.pages_at_once = T.category.item_count < L.pagination.pages_at_once ? T.category.item_count : L.pagination.pages_at_once, "horizontal" === L.pagination.direction ? (t.addClass("horizontal"), t.width(E.pagination.pages_at_once * E.pagination.page.width), t.height(E.pagination.page.height), a.width(T.category.item_count * E.pagination.page.width), a.height(E.pagination.page.height)) : (t.addClass("vertical"), t.width(E.pagination.page.width), t.height(E.pagination.pages_at_once * E.pagination.page.height), a.width(E.pagination.page.width), a.height(T.category.item_count * E.pagination.page.height)); e < T.category.item_count; e++)i += "<li><span></span></li>"; o = H(i), a.append(o), t.css("display", "") } }, select: function (e) { if (L.pagination.display) { var i = Math.floor(E.pagination.pages_at_once / 2), t = e - i, n = {}; t < 0 ? t = 0 : e >= T.category.item_count - i && (t = T.category.item_count - E.pagination.pages_at_once), n = "horizontal" == L.pagination.direction ? { left: -t * E.pagination.page.width } : { top: -t * E.pagination.page.height }, a.stop().animate(n, 250), o.removeClass("current"), o.eq(e).addClass("current") } } }, social_buttons: { init: function () { s = H('<div class="social_buttons ' + L.social_buttons.direction + '" />'), L.social_buttons.hideable ? (n = H('<div class="social_buttons_toggle ' + L.social_buttons.direction + '" />'), k.prepend(n), O.position_element(n, L.social_buttons.position), s.fadeTo(200, 0, function () { s.hide() }).data("visible", !1), k.prepend(s), O.position_element(s, H.extend({}, L.social_buttons.position, { h_offset: L.social_buttons.position.h_offset + n.outerWidth(!0) + 5 })), n.click(function () { s.data("visible") ? (s.data("visible", !1).stop().fadeTo(200, 0, function () { s.empty().hide() }), n.removeClass("active")) : (s.data("visible", !0).stop().fadeTo(200, 1), O.social_buttons.display(T.item.index), n.addClass("active")) })) : (k.prepend(s), O.position_element(s, L.social_buttons.position)), O.social_buttons.display(T.item.index) }, display: function (e) { if (L.social_buttons.display && (!L.social_buttons.hideable || s.data("visible"))) { var i, t = "", n = ""; for (i in s.html(""), n = "string" == typeof T.category.items[e].social_button_url ? T.category.items[e].social_button_url : (n = -1 == P.href.indexOf("#") ? P.href : P.href.substring(0, P.href.indexOf("#")), O.set_url_param(O.set_url_param(n, "edgpid", T.category.items[e].id), "edgmid", L.module_id) + "#slider_" + L.module_id + "/" + h.ids.join("-") + "/" + T.category.items[e].id + "/"), L.social_buttons.buttons) L.social_buttons.buttons[i].display && (t += '<div class="social_button">', t += L.social_buttons.buttons[i].html.replace(/{location_href}/g, n).replace(/{location_href_encoded}/g, encodeURIComponent(n)), t += "</div>"); C.transition_in_progres && L.social_buttons.load_after_effect ? (k.unbind("slider_transition_finnished.social_buttons"), k.bind("slider_transition_finnished.social_buttons", function () { s.html("").append(t) })) : s.append(t) } } }, _button: { init: function (e) { E.buttons[e.type] = H('<a class="standalone_button' + (e.custom_class ? " " + e.custom_class : "") + '" href="#">' + e.text + "</a>"), k.prepend(E.buttons[e.type]), O.position_element(E.buttons[e.type], L.buttons[e.type].position) }, display: function (e) { e.target = "string" == typeof e.target ? e.target : "_self", E.buttons[e.type].attr({ href: e.href, target: e.target }) } }, email_button: { init: function () { O._button.init({ type: "email", custom_class: "email", text: "Email this" }), O.email_button.display(T.item.index) }, display: function (e) { var i, t = P.href.indexOf("#"); L.buttons.email.display && (i = -1 == t ? P.href : P.href.substring(0, t), i += "#slider_" + L.module_id + "/" + h.ids.join("-") + "/" + T.category.items[T.item.index].id, O._button.display({ type: "email", href: "mailto:?subject=" + escape(L.buttons.email.email_subject) + "&body=" + encodeURIComponent(i) })) } }, download_button: { init: function () { O._button.init({ type: "download", custom_class: "download", text: "Download" }), O.download_button.display(T.item.index) }, display: function (e) { var i = T.category.items[e].download_url; L.buttons.download.display && (i = i || "#", O._button.display({ type: "download", href: i, target: "_blank" }), "#" == i ? E.buttons.download.stop().fadeTo(200, 0) : E.buttons.download.stop().fadeTo(200, 1)) } }, fullscreen_button: { init: function () { O._button.init({ type: "fullscreen", custom_class: "fullscreen", text: "Fullscreen" }), E.buttons.fullscreen.click(function () { return H(this)[N + "_fullscreen"](L.fullscreen_options), !1 }) } }, exit_fullscreen: { init: function () { O._button.init({ type: "exit_fullscreen", custom_class: "exit_fullscreen", text: "Exit fullscreen" }) } }, main_panel: { init: function () { var n, e = "mousedown", i = "mousemove", t = "mouseup"; g = H('<div class="main_panel" />'), O.main_panel.size(), x = H('<div class="items_wrapper" />'), g.append(x), k.prepend(g), (L.redirect_on_click || L.lightbox_on_click) && (M = H('<a href="#" class="media_link">Media link</a>'), L.redirect_on_click && M.attr("target", L.redirect_on_click_target), M.attr("title", "Media link"), g.append(M)), g.append('<div class="preloading_item" />'), !L.redirect_on_click && L.lightbox_on_click && (m = H('<div class="lightbox_links_container" style="display: none;"></div>'), x.append(m)), k.bind("slider_transition_finnished.main_panel", function () { C.transition_in_progres = !1 }), O.main_panel.display_category(!0), E.preloading_item || (O.main_panel.display(T.item.index, ""), O.triggers()), L.main_panel.drag_navigation && ((n = "ontouchstart" in I) && (e = "touchstart", i = "touchmove", t = "touchend"), g.delegate("a", "click", function (e) { E.main_panel.disable_clicking && e.preventDefault() }).bind(e + ".chameleon_" + L.module_id, function (e) { n && (e.originalEvent.touches && e.originalEvent.touches.length ? e = e.originalEvent.touches[0] : e.originalEvent.changedTouches && e.originalEvent.changedTouches.length && (e = e.originalEvent.changedTouches[0])), g.data("dragging", { start_position: { left: e.pageX, top: e.pageY } }), e.preventDefault() }), H(S).bind(i + ".chameleon_" + L.module_id, function (e) { var i, t; if ("object" == typeof g.data("dragging") && (t = g.data("dragging").start_position, E.main_panel.disable_clicking = !0, n && (e.originalEvent.touches && e.originalEvent.touches.length ? e = e.originalEvent.touches[0] : e.originalEvent.changedTouches && e.originalEvent.changedTouches.length && (e = e.originalEvent.changedTouches[0])), !(1 <= Math.abs((t.top - e.pageY) / (e.pageX - t.left))))) { if (i = t.left - e.pageX, Math.abs(i) < 50) return !1; g.data("dragging", !1), i < 0 ? O.prev() : O.next() } }).bind(t + ".chameleon_" + L.module_id, function (e) { g.data("dragging", !1), E.main_panel.disable_clicking_interval = setTimeout(function () { E.main_panel.disable_clicking = !1 }, 10) })), E.main_panel.initialized = !0 }, size: function () { L.main_panel.display && (E.main_panel.dimensions = O.get_dimensions(L.main_panel.dimensions), E.main_panel.dimensions.height -= L.main_panel.trim.top + L.main_panel.trim.bottom, E.main_panel.dimensions.width -= L.main_panel.trim.left + L.main_panel.trim.right, O.position_element(g, L.main_panel.position), g.width(E.main_panel.dimensions.width).height(E.main_panel.dimensions.height)) }, display_category: function (e) { var i, t = "", n = 0, a = T.category.items[T.item.index], o = []; if (L.main_panel.display) { if (_(a)) if (E.preloading_item = !0, e) H("<img />").load(function () { E.preloading_item = !1, O.main_panel.display(T.item.index, ""), O.triggers() }).error(function () { E.preloading_item = !1, O.triggers() }).attr("src", a.src); else { g.addClass("loading_category"); var s = function () { E.preloading_item = !1, O.main_panel.display(T.item.index, ""), g.removeClass("loading_category") }; H("<img />").load(s).error(s).attr("src", a.src) } for (; n < T.category.item_count; n++) { var r, l, d; if (i = T.category.items[n], L.main_panel.immediately_preload_all_images && _(i) && !E.preloaded_images[i.src] && (E.preloaded_images[i.src] = { loading: !0, loaded: !1 }, H("<img />").load({ src: i.src }, function (e) { E.preloaded_images[e.data.src] = { loading: !1, loaded: !0, width: this.width, height: this.height } }).attr("src", i.src)), !L.redirect_on_click && L.lightbox_on_click) d = "image" == i.type || "video" == i.type || "audio" == i.type ? (r = i.lightbox_url, l = i.download_url ? i.download_url : "", i.src) : l = r = "", "pp" == L.fullscreen_provider ? r && (t += '<a href="' + r + '" rel="prettyPhoto_M' + L.module_id + '" edgmid="' + L.module_id + '" edgpid="' + i.id + '" downhref="' + l + (L.lightbox_description && i.info ? '" pptitle="' + i.info.replace('"', "&quot;") : "") + '"><img src="' + d + '" alt="' + (L.lightbox_title && i.title ? i.title : "") + '" /></a>') : "smb" == L.fullscreen_provider ? H.isPlainObject(i.smb_object) && !H.isEmptyObject(i.smb_object) && o.push(i.smb_object) : "smbLight" == L.fullscreen_provider && H.isPlainObject(i.smbLight_object) && !H.isEmptyObject(i.smbLight_object) && o.push(i.smbLight_object) } !L.redirect_on_click && L.lightbox_on_click && ("pp" == L.fullscreen_provider ? (m.html(t), (u = m.find("> a")).prettyPhoto(L.pretty_photo_options)) : "smb" == L.fullscreen_provider ? m.data("socialMediaBox", o) : "smbLight" == L.fullscreen_provider && m.data("smbLightItems", o)) } }, display: function (o) { var e, s = "", r = "", l = T.category.items[o]; if (L.main_panel.display) { C.transition_in_progres = !0, M.unbind("click"), 2 == arguments.length ? r = s = arguments[1] : 1 == L.main_panel.transition.effects.length ? r = s = L.main_panel.transition.effects[0] : 1 < L.main_panel.transition.effects.length && (e = Math.floor(Math.random() * L.main_panel.transition.effects.length), r = s = L.main_panel.transition.effects[e]), M.attr("title", l.linkTitle), M.text(l.linkTitle), "image" == l.type ? (M.css("display", "block"), L.redirect_on_click && M.attr("href", "string" == typeof l.on_click_url && l.on_click_url ? l.on_click_url : "#")) : "video" == l.type || "audio" == l.type ? (r = s = "", L.redirect_on_click || void 0 !== l.html && "" != l.html ? M.css("display", "none") : M.css("display", "block")) : "html" == l.type && (r = "", "fade" != s && (s = "show")), !L.redirect_on_click && L.lightbox_on_click && M.attr("href", "#").click(function () { var e; return E.main_panel.disable_clicking || ("pp" == L.fullscreen_provider ? u.filter('a[edgpid="' + l.id + '"]').trigger("click") : "smb" == L.fullscreen_provider ? (L.smb_options.openAt = 0, H.each(m.data("socialMediaBox"), function (e, i) { if (i.id === l.id) return L.smb_options.openAt = e, !1 }), m.socialMediaBox(L.smb_options)) : "smbLight" == L.fullscreen_provider && (e = m.data("smbLightItems"), L.smbLight_options.openAt = 0, H.each(e, function (e, i) { if (i.id === l.id) return L.smbLight_options.openAt = e, !1 }), new SmbLight_1(e, L.smbLight_options))), !1 }), "object" == typeof r ? s = r.type : "" == s && (s = "show"), null != E.youtube_player_object && (E.youtube_player_object.getIframe().src = "", E.youtube_player_object.stopVideo(), E.youtube_player_object = void 0); var d = function (e) { if (L.main_panel.immediately_preload_all_images || E.item_details_shown || (O.social_buttons.display(T.item.index), O.item_title.select(T.item.index), O.item_info.display(T.item.index), O.download_button.display(T.item.index), O.email_button.display(T.item.index)), O.main_panel._transitions[s]({ item_index: o, effect_settings: r, item_src: e || l.src }), L.main_panel.fill_panel && _(l) && O.main_panel._fit_image(x.find("> .item_container").filter(":last").find("> img")), !L.main_panel.immediately_preload_all_images) { var i = T.category.items[T.item.index + 1]; if (i && _(i)) { var t = c(i); if (!E.preloaded_images[t]) { E.preloaded_images[t] = { loading: !0, loaded: !1 }; var n = T.category.id, a = T.item.index + 1; H("<img />").load(function (e) { E.preloaded_images[t] = { loading: !1, loaded: !0, width: this.width, height: this.height }, n == T.category.id && a == T.item.index && (d(t), O.main_panel.remove_loading_effect("loading_item")) }).attr("src", t) } } } }; if (_(l)) if (L.main_panel.immediately_preload_all_images) d(); else { var i = c(l); if (E.preloaded_images[i]) E.preloaded_images[i].loaded && (d(i), O.main_panel.remove_loading_effect("loading_item")); else { O.main_panel.show_loading_effect("loading_item"), E.preloaded_images[i] = { loading: !0, loaded: !1 }; var t = T.category.id, n = T.item.index; H("<img />").load(function (e) { E.preloaded_images[i] = { loading: !1, loaded: !0, width: this.width, height: this.height }, t == T.category.id && n == T.item.index && (d(i), O.main_panel.remove_loading_effect("loading_item")) }).attr("src", i) } } else d() } }, show_loading_effect: function (e) { clearTimeout(g.data("loading_effect_timeout")), g.addClass(e + " loading_effect show_preload") }, remove_loading_effect: function (e) { g.removeClass("show_preload"), g.data("loading_effect_timeout", setTimeout(function () { g.removeClass(e + " loading_effect") }, 400)) }, _fit_image: function (e) { function i(e, i) { var t, n, a, o = E.main_panel.dimensions.width, s = E.main_panel.dimensions.height; i.width == o && i.height == s || (e.css({ position: "relative" }), i.width > o || i.height > s || L.main_panel.stretch_small_image ? (e.css({ width: "100%", height: "auto" }), t = o / i.width, (n = Math.floor(i.height * t)) < s ? (t = s / i.height, a = Math.floor(i.width * t), e.css({ height: "100%", width: "auto" }), L.main_panel.top_left_align || e.css({ left: -Math.floor((a - o) / 2) })) : s < n && !L.main_panel.top_left_align && e.css({ top: -Math.floor((n - s) / 2) })) : L.main_panel.top_left_align || (i.width < o && e.css({ left: Math.floor((o - i.width) / 2) }), i.height < s && e.css({ top: Math.floor((s - i.height) / 2) }))) } var t = e.attr("src"), n = E.preloaded_images[t]; n && n.loaded ? i(e, n) : H("<img />").load({ src: t, $img: e }, function (e) { E.preloaded_images[e.data.src] = { loading: !1, loaded: !0, width: this.width, height: this.height }, i(e.data.$img, E.preloaded_images[e.data.src]) }).attr("src", t) }, _transitions: { show: function (e) { var i, t, n, a, o = '<div class="item_container new_item">', s = T.category.items[e.item_index], r = x.find("> .item_container").eq(0), l = void 0 === s.html || "" == s.html ? "" : s.html, d = "", c = !1; "html" != s.type && "video" != s.type && "audio" != s.type || !l ? o += '<img alt="' + ("object" == typeof s.thumb && s.thumb.caption ? s.thumb.caption : "") + '" src="' + e.item_src + '" />' : ("" == (t = void 0 === s.video_src || "" == s.video_src ? "" : s.video_src) ? L.autoplay.enable && (d = O._video.get_provider(l), n = O._video.get_video_id(d, l)) : (d = L.inhouse_player, n = t), "" === d ? o += l : (c = !0, o += '<div id="' + (a = "chameleon_video_container_" + L.module_id + "_" + h.indexes.join("-") + "_" + T.item.index + "_" + Math.round(1e5 * Math.random())) + '"></div>')), i = H(o += "</div>"), x.find("> .item_container.new_item").removeClass("new_item"), i.css({ width: E.main_panel.dimensions.width, height: E.main_panel.dimensions.height }).appendTo(x), c && O._video.player_setup({ container: a, provider: d, id: n, dimensions: E.main_panel.dimensions }), r.hasClass("new_item") || r.remove(), c || k.trigger("slider_transition_finnished") }, fade: function (e) { var i, t = T.category.items[e.item_index], n = "object" == typeof t.thumb && t.thumb.caption ? t.thumb.caption : "", a = void 0 === t.html || "" == t.html ? "" : t.html; "image" == t.type ? i = H('<div class="item_container new_item"><img alt="' + n + '" src="' + e.item_src + '" /></div>') : a && (i = H('<div class="item_container new_item">' + a + "</div>")), x.find("> .item_container.new_item").removeClass("new_item"), i.css({ width: E.main_panel.dimensions.width, height: E.main_panel.dimensions.height, display: "none" }).appendTo(x).fadeIn(L.main_panel.transition.duration, function () { var e = x.find("> .item_container").eq(0); e.hasClass("new_item") || e.remove(), k.trigger("slider_transition_finnished") }) }, slide: function (e) { function i() { var e = x.find("> .item_container").eq(0); e.hasClass("new_item") || e.remove(), k.trigger("slider_transition_finnished") } var t = T.category.items[e.item_index], n = "object" == typeof t.thumb && t.thumb.caption ? t.thumb.caption : "", a = H('<div class="item_container new_item"><img alt="' + n + '" src="' + e.item_src + '" /></div>'), o = x.find("> .item_container").filter(":last"), s = "left"; switch (e.effect_settings.force_horizontal ? s = z < e.item_index ? "left" : "right" : e.effect_settings.force_vertical ? s = z < e.item_index ? "up" : "down" : 1 == e.effect_settings.directions.length ? s = e.effect_settings.directions[0] : 1 < e.effect_settings.directions.length && (s = e.effect_settings.directions[Math.floor(Math.random() * e.effect_settings.directions.length)]), x.find("> .item_container.new_item").removeClass("new_item"), a.css({ width: E.main_panel.dimensions.width, height: E.main_panel.dimensions.height }), s) { case "down": a.css("top", -E.main_panel.dimensions.height).appendTo(x).animate({ top: 0 }, L.main_panel.transition.duration, "swing", i), o.animate({ top: E.main_panel.dimensions.height }, L.main_panel.transition.duration, "swing"); break; case "up": a.css("top", E.main_panel.dimensions.height).appendTo(x).animate({ top: 0 }, L.main_panel.transition.duration, "swing", i), o.animate({ top: -E.main_panel.dimensions.height }, L.main_panel.transition.duration, "swing"); break; case "right": a.css("left", -E.main_panel.dimensions.width).appendTo(x).animate({ left: 0 }, L.main_panel.transition.duration, "swing", i), o.animate({ left: E.main_panel.dimensions.width }, L.main_panel.transition.duration, "swing"); break; default: a.css("left", E.main_panel.dimensions.width).appendTo(x).animate({ left: 0 }, L.main_panel.transition.duration, "swing", i), o.animate({ left: -E.main_panel.dimensions.width }, L.main_panel.transition.duration, "swing") } }, stripes: function (e) { function r() { var e = x.find("> .item_container").eq(0); e.hasClass("new_item") || e.remove(), k.trigger("slider_transition_finnished") } function i(i, t) { function e() { var e; e = "horizontal" == b.orientation ? { left: 0, opacity: 1 } : { top: 0, opacity: 1 }, i.animate(e, { duration: L.main_panel.transition.duration, easing: "swing", complete: function () { 0 == b.start_at || 2 == b.start_at ? t + 1 == b.num_of_stripes && r() : 1 == b.start_at ? 0 == t && r() : t == Math.floor(b.num_of_stripes / 2) && r() } }) } var n = l, a = d; if (m = "horizontal" == b.orientation ? (p = t * d, h = 0 === b.direction ? -l : 1 === b.direction ? l : t % 2 == 0 ? -l : l, g = u - p, f) : (h = t * l, p = 0 === b.direction ? -d : 1 === b.direction ? d : t % 2 == 0 ? -d : d, g = u, f - h), t + 1 == b.num_of_stripes && (n = c, a = _), (i = H('<div class="fancy_effect_element" />')).css({ width: n, height: a, top: p, left: h, opacity: 0, background: "url('" + y + "') no-repeat " + m + "px " + g + "px " + k.css("background-color") }).appendTo(w), 0 === b.start_at) setTimeout(e, t * v + 1); else if (1 == b.start_at) setTimeout(e, (b.num_of_stripes - 1 - t) * v + 1); else if (2 == b.start_at || 3 == b.start_at) { var o, s = 0; b.num_of_stripes % 2 == 0 ? (o = b.num_of_stripes / 2, t < o ? s = 3 == b.start_at ? t : Math.abs(t - o + 1) : (s = t - o, 3 == b.start_at && (s = o - 1 - s))) : (o = Math.floor(b.num_of_stripes / 2), s = t < o ? o - t : t - o, 3 == b.start_at && (s = o - s)), setTimeout(e, s * v + 1) } } var t, n, a, l = 0, d = 0, c = 0, _ = 0, p = 0, h = 0, g = 0, m = 0, u = 0, f = 0, y = e.item_src, b = H.extend(!0, { orientation: "vertical", num_of_stripes: 12, direction: 0, start_at: 0, randomize: { orientation: !1, direction: !1, start_at: !1 } }, e.effect_settings), v = Math.floor(L.main_panel.transition.duration / b.num_of_stripes), w = H('<div class="item_container new_item"></div>'); b.randomize.orientation && (0 == Math.floor(2 * Math.random()) ? b.orientation = "horizontal" : b.orientation = "vertical"), b.randomize.direction && (b.direction = Math.floor(3 * Math.random())), b.randomize.start_at && (b.start_at = Math.floor(4 * Math.random())), x.find("> .item_container.new_item").removeClass("new_item"), w.css({ width: E.main_panel.dimensions.width, height: E.main_panel.dimensions.height }).appendTo(x), "horizontal" == b.orientation ? (c = l = E.main_panel.dimensions.width, d = Math.ceil(E.main_panel.dimensions.height / b.num_of_stripes), _ = 0 == (_ = d * b.num_of_stripes - E.main_panel.dimensions.height) ? d : d - _) : (_ = d = E.main_panel.dimensions.height, l = Math.ceil(E.main_panel.dimensions.width / b.num_of_stripes), c = 0 == (c = l * b.num_of_stripes - E.main_panel.dimensions.width) ? l : l - c), t = E.preloaded_images[y], n = E.main_panel.dimensions.width, a = E.main_panel.dimensions.height, t.width == n && t.height == a || (t.width < n ? f = Math.floor((n - t.width) / 2) : t.width > n && (f = -Math.floor((t.width - n) / 2)), t.height < a ? u = Math.floor((a - t.height) / 2) : t.height > a && (u = -Math.floor((t.height - a) / 2))); for (var o = 0; o < b.num_of_stripes; o++)i(void 0, o) } } }, _on_pre_item_change: void 0, _video: { get_provider: function (e) { if ("<iframe" == e.substring(0, 7)) { if (-1 !== e.indexOf("youtube.com/embed/", 7)) return "youtube"; if (-1 !== e.indexOf("player.vimeo.com/video/", 7)) return "vimeo" } return "" }, get_video_id: function (e, i) { var t, n; switch (e) { case "youtube": case "vimeo": return -1 !== (n = (t = H("<div>" + i + "</div>").find("iframe:first").attr("src")).indexOf("?")) && (t = t.substring(0, n)), "/" == t[t.length - 1] && (t = t.substring(0, t.length - 1)), t.substring(t.lastIndexOf("/") + 1); default: return "" } }, player_setup: function (e) { var i = H("#" + e.container); switch (i.css(e.dimensions), e.container = i, e.provider) { case "youtube": O._video._youtube_player(e); break; case "vimeo": O._video._vimeo_player(e); break; case "flowplayer": O._video._flow_player(e) } }, _youtube_player: function (e) { function i() { a = new YT.Player(o, { events: { onReady: function () { E.youtube_player_object = a, k.trigger("slider_transition_finnished"), L.autoplay.autostart_video_playback && a.playVideo() }, onStateChange: function (e) { switch (e.data) { case YT.PlayerState.PLAYING: C.video_playing = !0, O.autoplay.reset(); break; case YT.PlayerState.ENDED: setTimeout(O.next, 1e3) } } } }) } var t, n, a, o = e.container.attr("id") + "_object", s = '<iframe id="' + o + '" type="text/html" width="' + e.dimensions.width + '" height="' + e.dimensions.height + '" src="//www.youtube.com/embed/' + e.id + "?enablejsapi=1&amp;wmode=transparent&amp;origin=" + P.protocol + "//" + P.host + '" frameborder="0"></iframe>'; e.container.append(s), E.youtube_iframe_api.called || (E.youtube_iframe_api.called = !0, (t = S.createElement("script")).src = "//www.youtube.com/iframe_api", (n = S.getElementsByTagName("script")[0]).parentNode.insertBefore(t, n)), E.youtube_iframe_api.loaded ? i() : I.onYouTubeIframeAPIReady = function () { E.youtube_iframe_api.loaded = !0, i() } }, _vimeo_player: function (e) { function i(e, i) { var t = { method: e }; i && (t.value = i), a[0].contentWindow.postMessage(JSON.stringify(t), "https://player.vimeo.com") } function t(e) { switch (JSON.parse(e.data).event) { case "ready": k.trigger("slider_transition_finnished"), i("addEventListener", "finish"), i("addEventListener", "play"), L.autoplay.autostart_video_playback && i("play"); break; case "play": if (n) break; C.video_playing = n = !0, O.autoplay.reset(); break; case "finish": setTimeout(O.next, 1e3) } } var n = !1, a = H('<iframe src="//player.vimeo.com/video/' + e.id + '?api=1" width="' + e.dimensions.width + '" height="' + e.dimensions.height + '" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'); O._on_pre_item_change = function () { I.addEventListener ? I.removeEventListener("message", t, !1) : I.detachEvent("onmessage", t) }, I.addEventListener ? I.addEventListener("message", t, !1) : I.attachEvent("onmessage", t), e.container.append(a) }, _flow_player: function (e) { var i = !1, t = ""; A(e.id, ".mp4") ? t = "video/mp4" : A(e.id, ".webm") ? t = "video/webm" : A(e.id, ".ogg") ? t = "video/ogg" : A(e.id, ".flv") && (t = "video/flash"), flowplayer(e.container[0], { swf: L.flowplayer_src, volume: L.videoVolume, clip: { sources: [{ type: t, src: e.id }] } }).on("ready", function () { k.trigger("slider_transition_finnished"), L.autoplay.autostart_video_playback && flowplayer(e.container).play() }).on("resume", function () { L.autoplay.enable && !i && (i = !0, C.video_playing = !0, O.autoplay.reset()) }).on("finish", function () { L.autoplay.enable && setTimeout(O.next, 1e3) }) } }, key_browse: function () { H(S).keyup(function (e) { return 37 === e.keyCode && O.prev(), 39 === e.keyCode && O.next(), !1 }) }, _scrollable_boxes: { init: function (e) { var i, t = L.scrollable_boxes[e.box]; (i = E.scrollable_boxes[e.box] = { jq: { container: H('<div class="scrollable_box' + (e.custom_class ? " " + e.custom_class : "") + '" />').data("disabled", !1), viewport: H('<div class="viewport" />'), content: H('<div class="overview" />'), scrollbar: H() } }).jq.container.append(i.jq.viewport), i.jq.viewport.append(i.jq.content), k.prepend(i.jq.container), O._scrollable_boxes.size(e.box), t.container.resize_to_content || i.jq.container.height(i.dimensions.height), O._scrollable_boxes.display(e), t.container.show_on_hover && k.hover(function () { E.mouse_entered = !0, 0 == i.jq.container.data("disabled") && i.jq.container.stop(!0).fadeTo(200, 1, function () { i.jq.container.css("display", "block") }) }, function () { E.mouse_entered = !1, 0 == i.jq.container.data("disabled") && i.jq.container.stop(!0).fadeTo(200, 0, function () { i.jq.container.css("display", "none") }) }) }, size: function (e) { var i = E.scrollable_boxes[e], t = L.scrollable_boxes[e]; t.display && (i.jq.scrollbar.remove(), i.jq.scrollbar = H('<div class="scrollbar"><div class="track"><div class="thumb"><div class="end"></div></div></div></div>'), i.dimensions = O.get_dimensions(t.container.dimensions), O.position_element(i.jq.container, t.container.position), i.dimensions.height > E.container_dimensions.height && (i.dimensions.height = E.container_dimensions.height), i.dimensions.width > E.container_dimensions.width && (i.dimensions.width = E.container_dimensions.width), i.jq.container.width(i.dimensions.width).css({ maxHeight: i.dimensions.height }).append(i.jq.scrollbar).eds_tinyscrollbar({ size: i.dimensions.height - (i.jq.scrollbar.outerHeight(!0) - i.jq.scrollbar.height()) }).hide(0), i.jq.viewport.css({ maxHeight: i.dimensions.height - i.jq.viewport.outerHeight(!0) }), t.container.resize_to_content || i.jq.container.height(i.dimensions.height)) }, display: function (e) { function i() { function e() { t.jq.viewport.stop(!0).fadeTo(200, 1, function () { t.jq.scrollbar.css("display", "block") }), t.jq.scrollbar.hasClass("disable") || t.jq.scrollbar.stop(!0).fadeTo(200, 1, function () { t.jq.scrollbar.css("display", "block") }) } t.jq.viewport.css({ visibility: "", display: "none" }), n.container.show_on_hover ? E.mouse_entered ? e() : (t.jq.viewport.css({ display: "block" }), t.jq.scrollbar.hasClass("disable") || t.jq.scrollbar.css({ display: "block" })) : e() } var t = E.scrollable_boxes[e.box], n = L.scrollable_boxes[e.box]; n.display && ("string" == typeof e.content && e.content ? (t.jq.container.data("disabled", !1), t.jq.container.is(":visible") ? (t.jq.container.css({ height: t.jq.container.height() }), t.jq.scrollbar.stop(!0).fadeTo(200, 0, function () { t.jq.scrollbar.css("display", "none") }), t.jq.viewport.stop(!0).fadeTo(200, 0, function () { t.jq.content.html(e.content), t.jq.viewport.css({ visibility: "hidden", display: "block" }).removeClass("scrollable"), t.jq.container.eds_tinyscrollbar_update(), t.jq.scrollbar.hasClass("disable") || (t.jq.viewport.addClass("scrollable"), t.jq.container.eds_tinyscrollbar_update()), !n.container.resize_to_content || n.container.show_on_hover && !E.mouse_entered ? (t.jq.container.height(t.dimensions.height), i()) : t.jq.container.animate({ height: t.jq.viewport.outerHeight(!0) }, 200, i) })) : (t.jq.container.css({ visibility: "hidden", display: "block" }), t.jq.viewport.removeClass("scrollable"), t.jq.content.html(e.content), t.jq.container.eds_tinyscrollbar_update(), t.jq.scrollbar.hasClass("disable") ? t.jq.scrollbar.css({ display: "none" }) : (t.jq.viewport.addClass("scrollable"), t.jq.scrollbar.css({ display: "block", opacity: 1 }), t.jq.container.eds_tinyscrollbar_update()), t.jq.container.css({ visibility: "", display: "none", height: n.container.resize_to_content ? t.jq.viewport.outerHeight(!0) : t.dimensions.height }), n.container.show_on_hover && !E.mouse_entered || t.jq.container.stop(!0).fadeTo(200, 1, function () { t.jq.container.css("display", "block") }))) : t.jq.container.data("disabled", !0).stop(!0).fadeTo(200, 0, function () { t.jq.container.css("display", "none") })) } }, item_info: { init: function () { O._scrollable_boxes.init({ box: "item_info", custom_class: "item_info", content: T.category.items[T.item.index].info }) }, display: function (e) { O._scrollable_boxes.display({ box: "item_info", content: T.category.items[e].info }) } }, gallery_info: { init: function () { O._scrollable_boxes.init({ box: "gallery_info", custom_class: "gallery_info", content: T.category.info }) }, display: function () { O._scrollable_boxes.display({ box: "gallery_info", content: T.category.info }) } }, autoplay_toggle: { init: function () { d = H('<a href="#" class="autoplay_toggle" title="Play/Pause">Play/Pause</a>'), L.autoplay.enable ? d.addClass("pause") : C.user_paused = !0, d.prependTo(k).click(function () { return C.user_paused ? (C.user_paused = !1, d.addClass("pause"), L.autoplay.enable || (C.fade_in = !0, L.autoplay.enable = !0, O.autoplay.init()), L.autoplay.pause_on_hover || O.autoplay.start()) : (d.removeClass("pause"), C.user_paused = !0, C.pause || O.autoplay.pause()), !1 }), O.position_element(d, L.autoplay_toggle.position), T.category.item_count < 2 && d.css("display", "none"), L.autoplay_toggle.auto_hide && (d.css("display", "none"), k.hover(function () { T.category.item_count < 2 || d.stop().fadeTo(L.autoplay_toggle.hide_speed, 1) }, function () { d.stop().fadeTo(L.autoplay_toggle.hide_speed, 0) })) }, display_category: function () { var e = ""; L.autoplay_toggle.display && (T.category.item_count < 2 && (e = "none"), d.css("display", e)) } }, autoplay: { init: function () { L.autoplay.indicator.display && (r = H('<div class="indicator" />'), l = H('<div class="autoplay_container" />'), O.autoplay.size(), "vertical" != L.autoplay.indicator.orientation || L.autoplay.indicator.flip_direction ? L.autoplay.indicator.flip_direction && r.css({ left: "auto", right: 0 }) : r.css({ top: "auto", bottom: 0 }), l.append(r).css("display", "none"), C.fade_in ? (k.append(l), l.fadeIn(300)) : (k.prepend(l), l.css("display", ""))), k.bind("slider_transition_finnished", function () { C.user_paused || C.pause || O.autoplay.start() }) }, size: function () { L.autoplay.enable && L.autoplay.indicator.display && (E.autoplay.indicator = O.get_dimensions(L.autoplay.indicator.dimensions), O.position_element(l, L.autoplay.indicator.position), "vertical" == L.autoplay.indicator.orientation ? r.width(E.autoplay.indicator.width) : r.height(E.autoplay.indicator.height), l.css(E.autoplay.indicator)) }, start: function () { var e = L.autoplay.interval, i = !0; T.category.item_count < 2 ? L.autoplay.indicator.display && l.css("display", "none") : L.autoplay.enable && "" == C.interval && (C.last_started = (new Date).getTime(), C.reset = !1, 0 != C.time_remaining && (i = !1, e = C.time_remaining), L.autoplay.indicator.display && (l.css("display", ""), r.stop(), "vertical" == L.autoplay.indicator.orientation ? (i && r.height(0), r.animate({ height: E.autoplay.indicator.height }, e, "linear")) : (i && r.width(0), r.animate({ width: E.autoplay.indicator.width }, e, "linear"))), C.interval = setTimeout(O.next, e)) }, pause: function () { L.autoplay.enable && !C.reset && (C.pause_time = (new Date).getTime(), C.start_pause_delta = C.pause_time - C.last_started, L.autoplay.indicator.display && r.stop(), C.time_remaining = (0 == C.time_remaining ? L.autoplay.interval : C.time_remaining) - C.start_pause_delta, clearTimeout(C.interval), C.interval = "") }, reset: function () { L.autoplay.enable && (clearTimeout(C.interval), C.interval = "", C.time_remaining = 0, C.reset = !0, L.autoplay.indicator.display && (r.stop(), "vertical" == L.autoplay.indicator.orientation ? r.height(0) : r.width(0))) }, display_category: function () { L.autoplay.enable && L.autoplay.indicator.display && (T.category.item_count < 2 ? l.css("display", "none") : l.css("display", "")) } }, _items_panel: { init: function (e) { e.page.append(e.item).appendTo(q[e.panel].container), E[e.panel].width = e.item.outerWidth(!0), E[e.panel].height = e.item.outerHeight(!0), E[e.panel].page.horizontal_space = e.page.outerWidth(!0) - e.page.width(), E[e.panel].page.vertical_space = e.page.outerHeight(!0) - e.page.height(), e.page.remove(), L[e.panel].container.transparent || q[e.panel].wrapper.addClass("not_transparent") }, calculate_pages: function (i) { var e; E[i.panel].container = O.get_dimensions(L[i.panel].container.dimensions), E[i.panel].page.width = E[i.panel].width + E[i.panel].page.horizontal_space, E[i.panel].page.width > E[i.panel].container.width ? E[i.panel].container.width = E[i.panel].page.width : E[i.panel].page.width = E[i.panel].container.width - E[i.panel].page.horizontal_space, E[i.panel].page.height = E[i.panel].height + E[i.panel].page.vertical_space, E[i.panel].page.height > E[i.panel].container.height ? E[i.panel].container.height = E[i.panel].page.height : E[i.panel].page.height = E[i.panel].container.height - E[i.panel].page.vertical_space, E[i.panel].per_row = Math.floor(E[i.panel].page.width / E[i.panel].width), E[i.panel].page.width = E[i.panel].per_row * E[i.panel].width, E[i.panel].row_count = Math.floor(E[i.panel].page.height / E[i.panel].height), E[i.panel].page.height = E[i.panel].row_count * E[i.panel].height, E[i.panel].per_page = E[i.panel].per_row * E[i.panel].row_count, E[i.panel].page.count = Math.ceil(i.item_count / E[i.panel].per_page), 1 < E[i.panel].page.count ? (q[i.panel].pagination ? (q[i.panel].pagination.next.css("display", "block"), q[i.panel].pagination.prev.css("display", "block")) : (q[i.panel].wrapper.append('<a href="#" class="navigation ' + L[i.panel].pagination.direction + ' prev">Previous</a><a href="#" class="navigation ' + L[i.panel].pagination.direction + ' next">Next</a>'), q[i.panel].pagination = { prev: q[i.panel].wrapper.find("> a.navigation.prev"), next: q[i.panel].wrapper.find("> a.navigation.next") }, q[i.panel].pagination.next.click(function () { var e = q[i.panel].pages.filter(".current").index(); return O._items_panel.move_to_page(i.panel, e + 1), !1 }), q[i.panel].pagination.prev.click(function () { var e = q[i.panel].pages.filter(".current").index(); return O._items_panel.move_to_page(i.panel, e - 1), !1 })), "vertical" == L[i.panel].pagination.direction ? ((e = E[i.panel].height + E[i.panel].page.vertical_space + 2 * q[i.panel].pagination.prev.outerHeight(!0)) > E[i.panel].container.height && (E[i.panel].container.height = e), q[i.panel].pagination.next.css({ top: E[i.panel].container.height - q[i.panel].pagination.next.height() }), E[i.panel].row_count = Math.floor((E[i.panel].container.height - 2 * q[i.panel].pagination.prev.outerHeight(!0) - E[i.panel].page.vertical_space) / E[i.panel].height), E[i.panel].page.height = E[i.panel].row_count * E[i.panel].height) : ((e = E[i.panel].width + E[i.panel].page.horizontal_space + 2 * q[i.panel].pagination.prev.outerWidth(!0)) > E[i.panel].container.width && (E[i.panel].container.width = e), E[i.panel].per_row = Math.floor((E[i.panel].container.width - 2 * q[i.panel].pagination.prev.outerWidth(!0) - E[i.panel].page.horizontal_space) / E[i.panel].width), E[i.panel].page.width = E[i.panel].per_row * E[i.panel].width), E[i.panel].per_page = E[i.panel].per_row * E[i.panel].row_count, E[i.panel].page.count = Math.ceil(i.item_count / E[i.panel].per_page)) : q[i.panel].pagination && (q[i.panel].pagination.next.css("display", "none"), q[i.panel].pagination.prev.css("display", "none")), q[i.panel].wrapper.css(E[i.panel].container), E[i.panel].window_width = E[i.panel].page.width + E[i.panel].page.horizontal_space, E[i.panel].window_height = E[i.panel].page.height + E[i.panel].page.vertical_space, q[i.panel].window.width(E[i.panel].window_width).height(E[i.panel].window_height).css({ top: Math.floor((E[i.panel].container.height - E[i.panel].window_height) / 2) }), "vertical" == L[i.panel].pagination.direction ? q[i.panel].container.width(E[i.panel].window_width).height(0) : q[i.panel].container.width(0).height(E[i.panel].window_height), O.position_element(q[i.panel].wrapper, L[i.panel].container.position) }, move_to_page: function (e, i) { var t, n = q[e].pages.length - 1; if (!(n < 0 || q[e].pages.eq(i).hasClass("current"))) { if (n < i) return t = "vertical" == L[e].pagination.direction ? { top: n * -(E[e].page.height + E[e].page.vertical_space) - 10 } : { left: n * -(E[e].page.width + E[e].page.horizontal_space) - 10 }, void q[e].container.animate(t, 40, "swing", function () { t = "vertical" == L[e].pagination.direction ? { top: n * -(E[e].page.height + E[e].page.vertical_space) } : { left: n * -(E[e].page.width + E[e].page.horizontal_space) }, q[e].container.animate(t, 50, "swing") }); if (i < 0) return t = "vertical" == L[e].pagination.direction ? { top: 10 } : { left: 10 }, void q[e].container.animate(t, 40, "swing", function () { t = "vertical" == L[e].pagination.direction ? { top: 0 } : { left: 0 }, q[e].container.animate(t, 50, "swing") }); q[e].pages.removeClass("current").eq(i).addClass("current"), t = "vertical" == L[e].pagination.direction ? { top: i * -(E[e].page.height + E[e].page.vertical_space) } : { left: i * -(E[e].page.width + E[e].page.horizontal_space) }, q[e].container.stop(!0, !1).animate(t, L[e].pagination.duration, L[e].pagination.easing) } } }, thumbnails: { init: function () { q.thumbs = { container: H('<div class="thumb_container" />'), window: H('<div class="thumb_window" />'), wrapper: H('<div class="thumb_wrapper" />') }, q.thumbs.window.append(q.thumbs.container), q.thumbs.wrapper.append(q.thumbs.window), k.prepend(q.thumbs.wrapper), O._items_panel.init({ panel: "thumbs", page: H("<ul />"), item: H('<li><img src="' + p[0].items[0].thumb.src + '" alt="" style="width: ' + L.thumbs.width + "px !important; height: " + L.thumbs.height + 'px !important;" /></li>') }), L.thumbs.auto_hide && (q.thumbs.wrapper.css({ display: "none" }), k.hover(function () { q.thumbs.wrapper.stop().fadeTo(L.thumbs.hide_speed, 1) }, function () { q.thumbs.wrapper.stop().fadeTo(L.thumbs.hide_speed, 0) })), O.thumbnails.display_category(!1), O.thumbnails.select(T.item.index) }, display_category: function () { var e, i, t, n, a, o, s = 0, r = !(0 < arguments.length && !1 === arguments[0]); if (L.thumbs.display) { for (O._items_panel.calculate_pages({ panel: "thumbs", item_count: T.category.item_count }), q.thumbs.container.html(""); s < T.category.item_count; s++)s % E.thumbs.per_page == 0 && ("vertical" == L.thumbs.pagination.direction ? q.thumbs.container.height(q.thumbs.container.height() + E.thumbs.window_height) : q.thumbs.container.width(q.thumbs.container.width() + E.thumbs.window_width), (e = H("<ul />")).width(E.thumbs.page.width).height(E.thumbs.page.height).appendTo(q.thumbs.container)), t = L.thumbs.captions && "string" == typeof T.category.items[s].thumb.caption && T.category.items[s].thumb.caption ? '<div class="caption_wrapper"><div class="caption">' + T.category.items[s].thumb.caption + "</div></div>" : "", n = L.thumbs.display_item_types ? '<span class="item_type_icon ' + T.category.items[s].type + '"></span>' : "", i = '<li><img style="width: ' + L.thumbs.width + "px !important; height: " + L.thumbs.height + 'px !important;" src="' + T.category.items[s].thumb.src + '" alt="" />' + n + t, r && (H("<img />").load({ index: s }, function (e) { q.thumbs.pages.find(".thumb_preloading").eq(e.data.index).fadeTo(500, 0, function () { H(this).remove() }) }).attr("src", T.category.items[s].thumb.src), i += '<div class="thumb_preloading"></div>'), e.append(i + "</li>"), L.thumbs.tooltips.enabled && H.fn.qtip && (o = !0, a = "", T.category.items[s].thumb.tooltip && (L.thumbs.tooltips.title && T.category.items[s].thumb.tooltip.title && (a = '<p class="title">' + T.category.items[s].thumb.tooltip.title + "</p>", o = !1), L.thumbs.tooltips.description && T.category.items[s].thumb.tooltip.description && (a += '<div class="description">' + T.category.items[s].thumb.tooltip.description + "</div>", o = !1), o || e.find("> li").filter(":last").qtip({ content: { text: a }, position: L.thumbs.tooltips.position, style: { classes: "chameleon_slider_tooltip " + L.thumbs.tooltips.classes, tip: { corner: !0 } } }))); q.thumbs.pages = q.thumbs.container.find("> ul") } }, trigger: function () { q.thumbs.container.delegate("ul > li", "click", function () { var e = H(this); return O.show_item(e.parent().index() * E.thumbs.per_page + e.index()), !1 }) }, select: function (e) { if (L.thumbs.display) { var i = q.thumbs.pages.find("> li").eq(e); O._items_panel.move_to_page("thumbs", i.parent().index()), q.thumbs.pages.find("> li.on").removeClass("on"), i.addClass("on") } } }, categories: { init: function () { q.categories = { container: H('<div class="categories_container" />'), window: H('<div class="categories_window" />'), wrapper: H('<div class="categories_wrapper ' + L.categories.pagination.direction + '" />') }, q.categories.window.append(q.categories.container), q.categories.wrapper.append(q.categories.window), k.prepend(q.categories.wrapper), O._items_panel.init({ panel: "categories", page: H("<ul />"), item: H('<li style="width: ' + L.categories.width + "px; height: " + L.categories.height + 'px;" />') }), L.categories.auto_hide && (q.categories.wrapper.css({ display: "none" }), k.hover(function () { q.categories.wrapper.stop().fadeTo(L.categories.hide_speed, 1) }, function () { q.categories.wrapper.stop().fadeTo(L.categories.hide_speed, 0) })), O.categories.display_categories() }, display_categories: function () { var e, i, t, n, a, o, s, r, l = [], d = 0, c = h.indexes[h.indexes.length - 1]; if (L.categories.display) { if (E.categories.render_categories) { for (1 == h.indexes.length ? l = p : ((n = H.extend([], h.indexes)).pop(), l = O.get_category(n).children, l = [{ id: -1, name: "&lt;Back", open_parent: !0 }].concat(l), c++), t = l.length, O._items_panel.calculate_pages({ panel: "categories", item_count: t }), q.categories.container.empty(), d = 0; d < t; d++)d % E.categories.per_page == 0 && ("vertical" == L.categories.pagination.direction ? q.categories.container.height(q.categories.container.height() + E.categories.window_height) : q.categories.container.width(q.categories.container.width() + E.categories.window_width), (e = H("<ul />")).width(E.categories.page.width).height(E.categories.page.height).appendTo(q.categories.container)), a = void 0 !== l[d].children && 0 < l[d].children.length, i = "<li" + (l[d].open_parent ? ' class="open_parent"' : "") + (a ? ' class="has_children"' : "") + ' style="width: ' + L.categories.width + "px; height: " + L.categories.height + 'px;"><a href="#" class="' + (l[d].open_parent ? "back_button" : "category") + '"><span>' + l[d].name + "</span></a>", a && (i += '<a href="#" class="open_children"></a>'), i += "</li>", e.append(i); q.categories.pages = q.categories.container.find("> ul"), o = (s = q.categories.pages.find("> li > a.category")).eq(0), r = L.categories.height - (o.outerHeight(!0) - o.height()), s.height(r), s.each(function () { var e = H(this).find("span"), i = e.height(); i < r ? e.css({ top: Math.floor((r - i) / 2) }) : e.css({ top: 0 }) }) } else 1 < h.indexes.length && c++ , E.categories.render_categories = !0; O.categories.select(c) } }, trigger: function () { q.categories.container.delegate("li > a", "click", function () { var e = H(this), i = e.parent(), t = i.parent().index() * E.categories.per_page + i.index(); if (q.categories.pages.find("> li").eq(0).hasClass("open_parent") && t-- , e.hasClass("category")) { if (i.hasClass("on")) return !1; h.indexes.pop(), h.indexes.push(t), h.ids = O.category_ids_from_indexes(h.indexes), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: T.category.items[0].id, index: 0 }, E.categories.render_categories = !1, O.change_category() } else e.hasClass("open_children") ? (h.indexes.pop(), h.indexes.push(t), h.indexes.push(0), h.ids = O.category_ids_from_indexes(h.indexes), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: T.category.items[0].id, index: 0 }, O.change_category()) : e.hasClass("back_button") && (h.indexes.pop(), h.ids = O.category_ids_from_indexes(h.indexes), T.category = O.get_category(h.indexes), T.category.item_count = T.category.items.length, T.item = { id: T.category.items[0].id, index: 0 }, O.change_category()); return !1 }) }, select: function (e) { var i = q.categories.pages.find("> li").eq(e); O._items_panel.move_to_page("categories", i.parent().index()), q.categories.pages.find("> li.on").removeClass("on"), i.addClass("on") } }, change_category: function () { O.main_panel.display_category(), O.categories.display_categories(), O.thumbnails.display_category(), O.pagination.display_category(), O.gallery_title.select(), O.gallery_info.display(), O.arrows.display_category(), O.autoplay_toggle.display_category(), O.autoplay.display_category(), O.show_item(T.item.index, !0) }, arrows: { init: function () { f = H('<a href="#" class="navigation_button prev" title="Previous">Previous</a>'), y = H('<a href="#" class="navigation_button next" title="Next">Next</a>'), k.prepend(f, y), O.position_element(f, L.arrows.prev.position), O.position_element(y, L.arrows.next.position), O.arrows.display_category() }, trigger: function () { f.click(function () { return O.prev(), !1 }), y.click(function () { return O.next(), !1 }), L.arrows.auto_hide && (f.fadeTo(0, 0), y.fadeTo(0, 0), k.hover(function () { 1 != T.category.item_count && (f.stop().fadeTo(L.arrows.hide_speed, 1), y.stop().fadeTo(L.arrows.hide_speed, 1)) }, function () { f.stop().fadeTo(L.arrows.hide_speed, 0), y.stop().fadeTo(L.arrows.hide_speed, 0) })) }, display_category: function () { var e = ""; 1 == T.category.item_count && (e = "none"), f.css("display", e), y.css("display", e) } }, _title_box: { init: function (e) { var i, t; E.title_boxes[e.box] = H('<span class="title_box' + (e.custom_class ? " " + e.custom_class : "") + '" style="height: ' + L.title_boxes[e.box].height + 'px;"><span>T</span></span>'), i = E.title_boxes[e.box].find("> span"), E.title_boxes[e.box].css("visibility", "hidden"), k.prepend(E.title_boxes[e.box]), O.position_element(E.title_boxes[e.box], L.title_boxes[e.box].position), (t = Math.floor((L.title_boxes[e.box].height - i.height()) / 2)) < 0 && (t = 0), i.css({ top: t }).empty(), E.title_boxes[e.box].css("visibility", "") }, change_text: function (e) { e.text ? E.title_boxes[e.box].is(":visible") ? E.title_boxes[e.box].stop().fadeTo(200, 0, function () { E.title_boxes[e.box].fadeTo(400, 1).find("> span").html(e.text) }) : E.title_boxes[e.box].stop().fadeTo(400, 1).find("> span").html(e.text) : E.title_boxes[e.box].stop().fadeTo(200, 0) } }, item_title: { init: function () { O._title_box.init({ box: "current_item", custom_class: "current_item" }), O.item_title.select(T.item.index) }, select: function (e) { L.title_boxes.current_item.display && O._title_box.change_text({ box: "current_item", text: T.category.items[e].title }) }, size: function () { L.title_boxes.current_item.display && O.position_element(E.title_boxes.current_item, L.title_boxes.current_item.position) } }, gallery_title: { init: function () { O._title_box.init({ box: "current_gallery", custom_class: "current_gallery" }), O.gallery_title.select() }, select: function () { L.title_boxes.current_gallery.display && O._title_box.change_text({ box: "current_gallery", text: T.category.name }) }, size: function () { L.title_boxes.current_gallery.display && O.position_element(E.title_boxes.current_gallery, L.title_boxes.current_gallery.position) } }, triggers: function () { L.arrows.display && O.arrows.trigger(), L.thumbs.display && O.thumbnails.trigger(), L.categories.display && O.categories.trigger(), L.key_browse && O.key_browse(), L.autoplay.enable && O.autoplay.start(), L.autoplay.pause_on_hover && k.hover(function () { T.category.item_count < 2 || C.user_paused || C.pause || (C.pause = !0, O.autoplay.pause()) }, function () { T.category.item_count < 2 || (C.pause = !1, C.video_playing || C.user_paused || C.transition_in_progres || O.autoplay.start()) }), k.bind("resize_slider", function () { O.autoplay.reset(), k.css(E.container_dimensions), O.main_panel.size(), O.autoplay.size(), O._scrollable_boxes.size("gallery_info"), O._scrollable_boxes.size("item_info"), O.gallery_title.size(), O.item_title.size(), O.thumbnails.display_category(!1), O.categories.display_categories(), L.pagination.display && O.position_element(t, L.pagination.position), L.autoplay_toggle.display && O.position_element(d, L.autoplay_toggle.position), L.arrows.display && (O.position_element(f, L.arrows.prev.position), O.position_element(y, L.arrows.next.position)), O.show_item(T.item.index, !0, "") }), v.fadeOut(200, function () { v.remove() }), k.trigger("slider_initialized") }, get_dimensions: function (e) { var i; return i = 1 < arguments.length && "object" == typeof arguments[1] ? arguments[1] : { width: E.container_dimensions.width, height: E.container_dimensions.height }, { width: e.w_as_ratio ? Math.floor(i.width * e.width) : e.width, height: e.h_as_ratio ? Math.floor(i.height * e.height) : e.height } }, position_element: function (e, i) { var t = i.v_as_ratio ? Math.floor(i.v_offset * E.container_dimensions.height) : i.v_offset, n = i.h_as_ratio ? Math.floor(i.h_offset * E.container_dimensions.width) : i.h_offset; i.v_center_point && (t -= Math.floor(e.outerHeight() / 2)), i.h_center_point && (n -= Math.floor(e.outerWidth() / 2)), "top" == i.vertical ? e.css("top", t) : e.css({ top: "auto", bottom: t }), "left" == i.horizontal ? e.css("left", n) : e.css({ left: "auto", right: n }) }, category_indexes_from_ids: function (e, i) { var t, n = 0, a = []; if (0 == e.length) return []; for (t = H.isArray(i) ? i.length : 0; n < t; n++)if (i[n].id == e[0]) return e.shift(), 0 != e.length && 0 == (a = O.category_indexes_from_ids(e, i[n].children)).length ? [] : [n].concat(a); return [] }, category_ids_from_indexes: function (e) { var i, t = e.length, n = 1, a = p[e[0]]; for (i = [a.id]; n < t; n++)a = a.children[e[n]], i.push(a.id); return i }, get_category: function (e) { var i, t = e.length, n = 1; if (!H.isArray(e) || 0 == e.length) return p[0]; for (i = p[e[0]]; n < t; n++)i = i.children[e[n]]; return i }, item_index_from_id: function (e) { var i = T.category.items, t = i.length, n = 0; if (null == e) return 0; for (; n < t; n++)if (i[n].id == e) return n; return 0 }, set_url_param: function (e, i) { var t, n, a = "", o = "", s = i + (2 < arguments.length ? "=" + arguments[2] : ""), r = !1, l = !1; if (a = 1 != (e = e.split("#")).length && e[1], 1 == (e = e[0].split("?")).length || "" == e[1]) o = e[0] + "?" + s; else { for (n in o = e[0] + "?", t = e[1].split("&")) "string" == typeof t[n] && ((r = t[n].split("="))[0] == i ? (l = !0, o += s + "&") : 1 == r.length ? o += r[0] + "&" : o += r[0] + "=" + r[1] + "&"); l ? o = o.substring(0, o.length - 1) : o += s } return o + (!1 === a ? "" : "#" + a) } }; O.init() }) }, H.fn[N + "_fullscreen"] = function (e) { function i() { t.fadeTo(500, 0, function () { n.trigger("destroy"), t.remove() }), H(S).unbind("keydown.chameleonslider_fullscreen_" + e.module_id) } var t, n; t = H('<div id="chameleonSliderFullscreen_' + e.module_id + '" style="z-index: 15000; overflow: hidden; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, .5);"><div class="chameleon_slider ' + e.theme + '" /></div>'), H("body").append(t), n = t.find("> .chameleon_slider"), H.extend(!0, e, { container_dimensions: { width: 1, height: 1, w_as_ratio: !0, h_as_ratio: !0 }, autoplay: { pause_on_hover: !1 }, buttons: { exit_fullscreen: { display: !0 }, fullscreen: { display: !1 } }, main_panel: { stretch_small_image: !0 } }), n.bind("slider_initialized", function () { n.find("> .exit_fullscreen").click(function () { return i(), !1 }), H(S).bind("keydown.chameleonslider_fullscreen_" + e.module_id, function (e) { 27 == e.which && i() }) }), n[N](e) } }(eds3_5_jq, window, document);