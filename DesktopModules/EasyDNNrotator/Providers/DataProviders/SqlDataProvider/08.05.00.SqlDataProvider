IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE = 'PRIMARY KEY' AND TABLE_NAME = '{objectQualifier}EasyDNNRotatorData' )
BEGIN
	DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorData] WHERE EntryID IS NULL;
	WITH cte AS (
		SELECT EntryID, 
		row_number() OVER(PARTITION BY EntryID ORDER BY EntryID) AS [rn]
		FROM {databaseOwner}[{objectQualifier}EasyDNNRotatorData]
	)
	DELETE cte WHERE [rn] > 1
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNRotatorData] ADD EntryIDTemp INT CONSTRAINT DF_{objectQualifier}EasyDNNRotatorData_EntryID DEFAULT(0) NOT NULL 
	EXEC('UPDATE {databaseOwner}[{objectQualifier}EasyDNNRotatorData] SET EntryIDTemp = EntryID')
	EXEC('ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNRotatorData] ADD CONSTRAINT [PK_{objectQualifier}EasyDNNRotatorData] PRIMARY KEY NONCLUSTERED ([EntryIDTemp] ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)')
	IF EXISTS (SELECT name FROM sys.indexes WHERE name = N'IX_{objectQualifier}EasyDNNRotatorData_EntryID')
	BEGIN
		DROP INDEX IX_{objectQualifier}EasyDNNRotatorData_EntryID ON {databaseOwner}[{objectQualifier}EasyDNNRotatorData];
	END
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNRotatorData] DROP COLUMN EntryID
	EXEC sp_rename '{objectQualifier}EasyDNNRotatorData.[EntryIDTemp]' , 'EntryID', 'COLUMN'
END
GO